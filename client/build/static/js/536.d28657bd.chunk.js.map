{"version":3,"file":"static/js/536.d28657bd.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/InputGroup.js","components/availablePincodes.js","pages/Cart.jsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","export const availablePincodes = [\n  \"560001\",\n  \n  // ... all your pincodes\n];\n","import { useContext, useEffect, useState } from \"react\";\nimport { DataContainer } from \"../App\";\nimport {\n  Col,\n  Container,\n  Row,\n  Modal,\n  Button,\n  InputGroup,\n  Form,\n} from \"react-bootstrap\";\nimport { availablePincodes } from \"../components/availablePincodes.js\";\nimport DatePicker from \"react-datepicker\";\nimport { format } from 'date-fns';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\n\nconst Cart = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [orderData, setOrderData] = useState({\n    name: \"\",\n    email: \"\",\n    address: \"\",\n    phoneno: \"\",\n    age: \"\",\n    gotra: \"\",\n    gender: \"\",\n    date: \"\",\n  });\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n  const { CartItem, setCartItem, addToCart, decreaseQty, deleteProduct } =\n    useContext(DataContainer);\n  const totalPrice = CartItem.reduce(\n    (price, item) => price + item.qty * item.price,\n    0\n  );\n\n  const [pincode, setPincode] = useState(\"\");\n  const [pincodeMessage, setPincodeMessage] = useState(\"\");\n\n  const checkAvailability = () => {\n    if (availablePincodes.includes(pincode)) {\n      setPincodeMessage(\"Service is available in your pincode!\");\n    } else {\n      setPincodeMessage(\"Sorry, service is not available in your pincode.\");\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (CartItem.length === 0) {\n      const storedCart = localStorage.getItem(\"cartItem\");\n      setCartItem(JSON.parse(storedCart));\n    }\n  }, []);\n\n  const handleSubmitOrder = async () => {\n    if (!availablePincodes.includes(pincode)) {\n      alert(\"Service is not available in your pincode.\");\n      return;\n    }\n\n    const orderForm = document.querySelector(\"form\");\n    const formData = new FormData(orderForm);\n\n    const orderDetails = {\n      pincode: formData.get(\"pincode\"),\n      name: formData.get(\"name\"),\n      email: formData.get(\"email\"),\n      address: formData.get(\"address\"),\n      phoneno: formData.get(\"phoneno\"),\n      age: formData.get(\"age\"),\n      gotra: formData.get(\"gotra\"),\n      cartItems: CartItem,\n    };\n\n    try {\n      const response = await axios.post(\n        `http://localhost:8082/api/orders`,\n        orderDetails\n      );\n      if (response.data.success) {\n        setCartItem([]);\n        handleClose();\n        // Navigate to success page or show success message here\n      } else {\n        // Handle error (e.g., show an error message to the user)\n      }\n    } catch (error) {\n      console.error(\"Error submitting order:\", error);\n      // Handle error (e.g., show an error message to the user)\n    }\n  };\n\n  return (\n    <section className=\"cart-items\">\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Col md={8}>\n            {CartItem.length === 0 && (\n              <h1 className=\"no-items product\">No Sevas selected currently</h1>\n            )}\n            {CartItem.map((item) => {\n              const productQty = item.price * item.qty;\n              return (\n                <div className=\"cart-list\" key={item.id}>\n                  <Row>\n                    <Col className=\"image-holder\" sm={4} md={3}>\n                      <img src={item.imgUrl} alt=\"\" />\n                    </Col>\n                    <Col sm={8} md={9}>\n                      <Row className=\"cart-content justify-content-center\">\n                        <Col xs={12} sm={9} className=\"cart-details\">\n                          <h3>{item.productName}</h3>\n                          <h4>\n                            {`\\u20B9${item.price}.00`} * {item.qty}\n                            <span>{`\\u20B9${productQty}.00`}</span>\n                          </h4>\n                        </Col>\n                        <Col xs={12} sm={3} className=\"cartControl\">\n                          <button\n                            className=\"incCart\"\n                            onClick={() => addToCart(item)}\n                          >\n                            <i className=\"fa-solid fa-plus\"></i>\n                          </button>\n                          <button\n                            className=\"desCart\"\n                            onClick={() => decreaseQty(item)}\n                          >\n                            <i className=\"fa-solid fa-minus\"></i>\n                          </button>\n                        </Col>\n                      </Row>\n                    </Col>\n                    <button\n                      className=\"delete\"\n                      onClick={() => deleteProduct(item)}\n                    >\n                      <ion-icon name=\"close\"></ion-icon>\n                    </button>\n                  </Row>\n                </div>\n              );\n            })}\n          </Col>\n          <Col md={4}>\n            <div className=\"cart-total\">\n              <h2>Seva Summary</h2>\n              {/* <div className=\" d_flex\">\n                <h4>Total Price :</h4>\n                <h3>{`\\u20B9${totalPrice}.00`}</h3>\n              </div> */}\n              {/* Styled Checkout Button */}\n              <Button\n                onClick={handleShow}\n                style={{\n                  marginTop: \"15px\",\n                  backgroundColor: \"#4CAF50\",\n                  border: \"none\",\n                  padding: \"10px 20px\",\n                  borderRadius: \"5px\",\n                  boxShadow: \"0 2px 5px rgba(0,0,0,0.2)\",\n                  fontSize: \"16px\",\n                }}\n              >\n                Enter Seva Details\n              </Button>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n      {/* Checkout Form Modal */}\n      <Modal show={showModal} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Checkout Form</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form>\n            <Form.Group controlId=\"formPincode\">\n              <InputGroup>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Pincode\"\n                  value={pincode}\n                  onChange={(e) => setPincode(e.target.value)}\n                  name=\"pincode\"\n                />\n                <Button variant=\"outline-secondary\" onClick={checkAvailability}>\n                  Check Availability\n                </Button>\n              </InputGroup>\n              <Form.Text className=\"text-muted\">{pincodeMessage}</Form.Text>\n              <br />\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter the name\"\n                value={orderData.name}\n                onChange={(e) =>\n                  setOrderData((prevState) => ({\n                    ...prevState,\n                    name: e.target.value,\n                  }))\n                }\n                name=\"name\"\n              />{\" \"}\n              {/* added name attribute */}\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter the Devotee Email\"\n                value={orderData.email}\n                onChange={(e) =>\n                  setOrderData((prevState) => ({\n                    ...prevState,\n                    email: e.target.value,\n                  }))\n                }\n                name=\"email\"\n              />{\" \"}\n              {/* added name attribute */}\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Date</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter the Date\"\n                value={orderData.address}\n                onChange={(e) =>\n                  setOrderData((prevState) => ({\n                    ...prevState,\n                    address: e.target.value,\n                  }))\n                }\n                name=\"address\"\n              />{\" \"}\n              {/* added name attribute */}\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Phone No</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter the Devotee phone no\"\n                value={orderData.phoneno}\n                onChange={(e) =>\n                  setOrderData((prevState) => ({\n                    ...prevState,\n                    phoneno: e.target.value,\n                  }))\n                }\n                name=\"phoneno\"\n              />{\" \"}\n              {/* added name attribute */}\n            </Form.Group>\n            <Form.Group>\n              <Form.Label> Gotra </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter the Devotee gotra\"\n                value={orderData.age}\n                onChange={(e) =>\n                  setOrderData((prevState) => ({\n                    ...prevState,\n                    age: e.target.value,\n                  }))\n                }\n                name=\"age\"\n              />{\" \"}\n              {/* added name attribute */}\n            </Form.Group>\n            {/* <Form.Group>\n  <Form.Label>Date</Form.Label>\n  <Form.Control\n    type=\"text\"\n    placeholder=\"Enter the date\"\n    value={orderData.date}\n    onChange={(e) =>\n      setOrderData((prevState) => ({\n        ...prevState,\n        date: e.target.value,\n      }))\n    }\n    name=\"date\"\n  />\n</Form.Group> */}\n            {/* <Form.Group>\n              <Form.Label> Gotra </Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter the Devotee Gotra\"\n                value={orderData.gotra}\n                onChange={(e) =>\n                  setOrderData((prevState) => ({\n                    ...prevState,\n                    gotra: e.target.value,\n                  }))\n                }\n                name=\"gotra\"\n              />{\" \"}\n            </Form.Group> */}\n            {/* ... [Any other form fields you need] */}\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleSubmitOrder}>\n            {\" \"}\n            {/* replaced handleClose with handleSubmitOrder */}\n            Confirm Purchase\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </section>\n  );\n};\n\nexport default Cart;\n"],"names":["InputGroupText","createWithBsPrefix","Component","InputGroup","React","_ref","ref","bsPrefix","size","hasValidation","className","_ref$as","as","props","_objectWithoutProperties","_excluded","useBootstrapPrefix","contextValue","useMemo","_jsx","InputGroupContext","value","children","_objectSpread","classNames","concat","displayName","Object","assign","Text","Radio","FormCheckInput","type","Checkbox","availablePincodes","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","_useState3","name","email","address","phoneno","age","gotra","gender","date","_useState4","orderData","setOrderData","handleClose","_useContext","useContext","DataContainer","CartItem","setCartItem","addToCart","decreaseQty","deleteProduct","_useState5","reduce","price","item","qty","_useState6","pincode","setPincode","_useState7","_useState8","pincodeMessage","setPincodeMessage","useEffect","window","scrollTo","length","storedCart","localStorage","getItem","JSON","parse","handleSubmitOrder","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orderForm","formData","orderDetails","wrap","_context","prev","next","includes","alert","abrupt","document","querySelector","FormData","get","cartItems","axios","sent","data","success","t0","console","error","stop","apply","arguments","_jsxs","Container","Row","Col","md","map","productQty","sm","src","imgUrl","alt","xs","productName","onClick","id","Button","style","marginTop","backgroundColor","border","padding","borderRadius","boxShadow","fontSize","Modal","show","onHide","closeButton","Form","controlId","placeholder","onChange","e","target","variant","prevState"],"sourceRoot":""}